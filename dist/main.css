.layout-main.project-details {
  width: 100%;
  margin: 0 auto; }
  .layout-main.project-details p {
    font-size: 14px; }
  .layout-main.project-details .detailsContainer {
    height: 700px;
    padding: 50px;
    background-color: white;
    width: 40%;
    float: left; }
    .layout-main.project-details .detailsContainer button.details-container, .layout-main.project-details .detailsContainer button.submitEstimates {
      background-color: #454545;
      color: white;
      margin-right: 5px; }
  .layout-main.project-details .awaitingApproval, .layout-main.project-details .launchMessage {
    color: green;
    font-size: 18px;
    line-height: 53px; }
  .layout-main.project-details .summary {
    margin-bottom: 10px;
    word-wrap: break-word;
    width: 100%; }
  .layout-main.project-details .similarApps {
    margin-bottom: 10px;
    width: 100%; }
  .layout-main.project-details .usersDescription {
    margin-bottom: 10px;
    width: 100%; }
  .layout-main.project-details .features {
    margin-bottom: 20px;
    width: 100%; }
  .layout-main.project-details .visualElements {
    margin-bottom: 10px;
    width: 100%; }
  .layout-main.project-details .message {
    background: #38b449;
    line-height: 25px;
    vertical-align: middle;
    padding-left: 20px;
    margin-bottom: 15px; }
    .layout-main.project-details .message span {
      color: white;
      position: relative;
      bottom: 12px; }
    .layout-main.project-details .message img.checkmark-green {
      height: 43px;
      top: 3px;
      right: 10px;
      position: relative; }
  .layout-main.project-details header {
    background-color: black; }
  .layout-main.project-details main {
    background-color: white;
    padding: 0; }
  .layout-main.project-details aside {
    background-color: white;
    float: left;
    min-height: 700px; }
    .layout-main.project-details aside .challengesContainer {
      margin-top: 30%;
      width: 400px; }
      .layout-main.project-details aside .challengesContainer .submitEstimates {
        margin-top: 10px; }
      .layout-main.project-details aside .challengesContainer textarea {
        margin-top: 0;
        width: 250px;
        height: 80px; }
      .layout-main.project-details aside .challengesContainer .addButton {
        height: 42px;
        width: 42px;
        float: right;
        margin-top: 5px;
        background-color: #454545;
        color: white;
        margin-right: 20px; }
      .layout-main.project-details aside .challengesContainer .submitEstimates {
        background-color: #454545;
        color: white; }
      .layout-main.project-details aside .challengesContainer .addedChallenges {
        width: 100%;
        margin-top: 10px;
        margin-bottom: 10px; }
        .layout-main.project-details aside .challengesContainer .addedChallenges a {
          text-decoration: underline;
          float: right; }
    .layout-main.project-details aside .projectEstimate {
      margin-top: 10px;
      margin-bottom: 10px; }
  .layout-main.project-details .statusModal {
    position: absolute;
    background: rgba(0, 0, 0, 0.8);
    width: 40%;
    text-align: center;
    z-index: 999;
    vertical-align: middle;
    line-height: 44px; }
    .layout-main.project-details .statusModal div {
      text-align: center; }
    .layout-main.project-details .statusModal.success {
      background: rgba(56, 180, 73, 0.8); }
    .layout-main.project-details .statusModal span, .layout-main.project-details .statusModal h3 {
      color: white;
      width: 100%; }
    .layout-main.project-details .statusModal a {
      color: white; }
    .layout-main.project-details .statusModal .imageContainer, .layout-main.project-details .statusModal .messageContainer {
      width: 100%; }
    .layout-main.project-details .statusModal .exit {
      height: 40px;
      width: 40px; }
      .layout-main.project-details .statusModal .exit a {
        text-decoration: none;
        font-size: 55;
        line-height: 66; }
    .layout-main.project-details .statusModal button.modalButton {
      background-color: white;
      color: black; }
    .layout-main.project-details .statusModal img {
      height: 43px;
      top: 15px;
      right: 10px; }

.dropdown {
  line-height: 1.5em;
  width: 100%; }
  .dropdown .dropdown-container {
    position: relative;
    text-align: center;
    width: 100%; }
    .dropdown .dropdown-container.difficulty {
      margin-bottom: 10px; }
  .dropdown .dropdown-button {
    background: white;
    border-bottom-right-radius: 3px;
    border-top-right-radius: 3px;
    border-top: 1px solid silver;
    border-right: 1px solid silver;
    border-bottom: 1px solid silver;
    border-left: 1px solid silver;
    cursor: pointer;
    float: right;
    font-size: 0.7em;
    font-weight: 800;
    line-height: 40px;
    margin-top: 5px;
    padding: 0 2.5em 0 0.5em;
    position: relative; }
    .dropdown .dropdown-button p {
      font-size: 10px; }
    @media screen and (min-width: 53.75em) {
      .dropdown .dropdown-button {
        font-size: 1em;
        padding: 0 2.5em 0 0.5em; } }
    .dropdown .dropdown-button.type {
      float: left;
      margin-right: 10px;
      width: 168px;
      font-weight: normal; }
    .dropdown .dropdown-button.count {
      float: left;
      width: 120px;
      font-weight: normal; }
    .dropdown .dropdown-button.difficulty {
      width: 150px;
      float: left;
      font-weight: normal; }
  .dropdown .dropdown-button:hover {
    background-color: #f7f7f7; }
  .dropdown .dropdown-button:after {
    color: #333;
    content: "\25BE";
    display: block;
    position: absolute;
    right: 1em;
    top: 0; }
  .dropdown .dropdown-menu {
    -webkit-transition: all 0.2s ease-in-out;
    -moz-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
    background: white;
    border-radius: 3px;
    border: 1px solid silver;
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
    color: #333;
    cursor: pointer;
    display: none;
    margin: 0 auto;
    overflow: show;
    padding: 0;
    position: absolute;
    top: 50px;
    width: 228px;
    z-index: 5; }
    .dropdown .dropdown-menu:before {
      position: absolute;
      top: 0;
      right: 1em;
      bottom: 0;
      left: 0;
      color: white;
      font-size: 1.4em;
      pointer-events: none;
      text-shadow: 0 -2px 2px rgba(0, 0, 0, 0.3);
      top: -0.7em; }
    .dropdown .dropdown-menu.type {
      width: 168px; }
    .dropdown .dropdown-menu.count {
      width: 120px;
      right: 102px; }
    .dropdown .dropdown-menu.difficulty {
      width: 150px; }
  .dropdown .dropdown-menu li {
    border-bottom: 1px solid silver;
    color: #333;
    list-style: none;
    padding: 0.5em; }
  .dropdown .dropdown-menu li:hover {
    background: #f7f7f7; }
  .dropdown .dropdown-menu li:first-child {
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
  .dropdown .dropdown-menu li:last-child {
    border: none;
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px; }
  .dropdown .show-menu {
    display: block; }


/*# sourceMappingURL=data:application/json;base64, */

.layout-main.projects {
  background-color: #E6E6E6;
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  .layout-main.projects::after {
    clear: both;
    content: "";
    display: table; }
  .layout-main.projects hr {
    margin: 20px 0; }
  .layout-main.projects .projectLi {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 23.23176%;
    height: 220px;
    margin-bottom: 15px; }
    .layout-main.projects .projectLi:last-child {
      margin-right: 0; }
    .layout-main.projects .projectLi:nth-child(4n) {
      margin-right: 0; }
    .layout-main.projects .projectLi:nth-child(4n+1) {
      clear: left; }
    .layout-main.projects .projectLi div {
      margin-left: auto;
      margin-right: auto;
      width: 100%;
      height: 100%;
      background-color: white;
      padding-top: 15px;
      text-align: center; }
      .layout-main.projects .projectLi div button {
        display: none; }
      .layout-main.projects .projectLi div:hover {
        background-color: #454545; }
        .layout-main.projects .projectLi div:hover img {
          opacity: 0.1; }
        .layout-main.projects .projectLi div:hover button {
          display: inline-block;
          border: 1px solid white;
          background-color: #454545;
          border-radius: 10px;
          color: white; }
      .layout-main.projects .projectLi div .created {
        margin-top: 10px; }
      .layout-main.projects .projectLi div:hover {
        background-color: #454545; }
      .layout-main.projects .projectLi div span.type {
        margin-top: 10px;
        font-family: 'Source Sans Pro', sans-serif;
        font-weight: 400;
        font-size: 5;
        line-height: 6; }
      .layout-main.projects .projectLi div span.created {
        display: block; }
      .layout-main.projects .projectLi div .middle {
        height: 48%;
        background: black; }
        .layout-main.projects .projectLi div .middle img.missing {
          height: 70px;
          margin-left: 59px;
          margin-top: 15px; }
      .layout-main.projects .projectLi div img.checkmark {
        margin-top: -43px;
        margin-left: 47px;
        height: 43px;
        position: absolute; }
      .layout-main.projects .projectLi div.incomplete {
        background: #f25a29; }
      .layout-main.projects .projectLi div.submitted {
        background: #49dcfe;
        padding-top: 23px; }
      .layout-main.projects .projectLi div span.status {
        color: white;
        display: inline-block;
        margin-top: 8px;
        margin-bottom: 8px; }
      .layout-main.projects .projectLi div span.action, .layout-main.projects .projectLi div span.action a {
        color: whitesmoke;
        display: inline-block; }
        .layout-main.projects .projectLi div span.action a, .layout-main.projects .projectLi div span.action a a {
          text-decoration: underline; }
  .layout-main.projects .noProjectsMessage {
    text-align: center; }
  .layout-main.projects .grey {
    background-color: #F1F1F1; }
  .layout-main.projects .dropdown {
    line-height: 1.5em;
    width: 100%; }
    .layout-main.projects .dropdown .dropdown-container {
      display: inline-block;
      position: relative;
      text-align: center;
      width: 100%; }
      .layout-main.projects .dropdown .dropdown-container.difficulty {
        margin-bottom: 10px; }
    .layout-main.projects .dropdown .dropdown-button {
      background: white;
      border-bottom-right-radius: 3px;
      border-top-right-radius: 3px;
      border-top: 1px solid silver;
      border-right: 1px solid silver;
      border-bottom: 1px solid silver;
      border-left: 1px solid silver;
      cursor: pointer;
      float: right;
      font-size: 0.7em;
      font-weight: 800;
      line-height: 40px;
      margin-top: 5px;
      padding: 0 2.5em 0 0.5em;
      position: relative; }
      @media screen and (min-width: 53.75em) {
        .layout-main.projects .dropdown .dropdown-button {
          font-size: 1em;
          padding: 0 2.5em 0 0.5em; } }
      .layout-main.projects .dropdown .dropdown-button.type {
        float: left;
        margin-right: 10px;
        width: 156px;
        font-weight: normal; }
      .layout-main.projects .dropdown .dropdown-button.count {
        float: left;
        width: 110px; }
      .layout-main.projects .dropdown .dropdown-button.difficulty {
        width: 150px;
        float: left; }
    .layout-main.projects .dropdown .dropdown-button:hover {
      background-color: #f7f7f7; }
    .layout-main.projects .dropdown .dropdown-button:after {
      color: #333;
      content: "\25BE";
      display: block;
      position: absolute;
      right: 1em;
      top: 0; }
    .layout-main.projects .dropdown .dropdown-menu {
      -webkit-transition: all 0.2s ease-in-out;
      -moz-transition: all 0.2s ease-in-out;
      transition: all 0.2s ease-in-out;
      background: white;
      border-radius: 3px;
      border: 1px solid silver;
      box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);
      color: #333;
      cursor: pointer;
      display: none;
      margin: 0 auto;
      overflow: show;
      padding: 0;
      position: absolute;
      top: 50px;
      width: 228px;
      z-index: 5; }
      .layout-main.projects .dropdown .dropdown-menu:before {
        position: absolute;
        top: 0;
        right: 1em;
        bottom: 0;
        left: 0;
        color: white;
        font-size: 1.4em;
        pointer-events: none;
        text-shadow: 0 -2px 2px rgba(0, 0, 0, 0.3);
        top: -0.7em; }
      .layout-main.projects .dropdown .dropdown-menu.type {
        width: 156px; }
      .layout-main.projects .dropdown .dropdown-menu.count {
        width: 110px;
        right: 58px; }
      .layout-main.projects .dropdown .dropdown-menu.difficulty {
        width: 150px; }
    .layout-main.projects .dropdown .dropdown-menu li {
      border-bottom: 1px solid silver;
      color: #333;
      list-style: none;
      padding: 0.5em; }
    .layout-main.projects .dropdown .dropdown-menu li:hover {
      background: #f7f7f7; }
    .layout-main.projects .dropdown .dropdown-menu li:first-child {
      border-top-left-radius: 3px;
      border-top-right-radius: 3px; }
    .layout-main.projects .dropdown .dropdown-menu li:last-child {
      border: none;
      border-bottom-left-radius: 3px;
      border-bottom-right-radius: 3px; }
    .layout-main.projects .dropdown .show-menu {
      display: block; }

div.projectsHeading {
  height: 150px;
  background-color: white;
  border-top: 30px solid #454545;
  text-align: left; }
  div.projectsHeading div {
    text-align: center;
    margin-top: 8px; }
  div.projectsHeading button.projectsHeading {
    border-radius: 0px;
    margin: 0px 2px;
    background-color: white;
    color: black; }
    div.projectsHeading button.projectsHeading.selected {
      background-color: #E6E6E6; }
  div.projectsHeading h1 {
    display: inline-block; }


/*# sourceMappingURL=data:application/json;base64, */
